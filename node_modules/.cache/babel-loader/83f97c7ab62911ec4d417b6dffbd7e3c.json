{"ast":null,"code":"var _jsxFileName = \"/Users/coodori/Desktop/Coding/moumn/src/music/Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Image, Card, Button } from 'react-bootstrap';\nimport { useMediaQuery } from \"react-responsive\";\nimport { gsap } from 'gsap';\nimport AlertSong from \"./AlertSong\";\nimport styles from \"./Slider.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Slider(props) {\n  _s();\n\n  /* display size check */\n  const isMobile = useMediaQuery({\n    query: \"(max-width:767px)\"\n  });\n  const isTablet = useMediaQuery({\n    query: \"(min-width:768px) and (max-width:1199px)\"\n  });\n  /* pick random song */\n\n  const NUM = 8;\n  let chart_info = Object.values(props.chart_info);\n  let dataList = [],\n      randCheck = [],\n      cnt = 0;\n\n  while (cnt < NUM) {\n    let rand = Math.floor(Math.random() * chart_info.length);\n\n    if (randCheck.indexOf(rand) < 0) {\n      dataList.push(JSON.stringify(chart_info[rand]));\n      randCheck.push(rand);\n      cnt++;\n    }\n  }\n\n  const randSongs = useRef(dataList); // immutable data\n\n  /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - Mobile ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n\n  const [page, changePage] = useState(0);\n  const smInitCard = useRef(null);\n  const smLeftCard = useRef(null),\n        smRightCard = useRef(null);\n  const [smCards, direction] = useState(smInitCard);\n  useEffect(() => {\n    gsap.fromTo(smInitCard.current, {\n      y: -100,\n      opacity: 0,\n      duration: 2\n    }, {\n      y: 0,\n      opacity: 1,\n      duration: 1\n    });\n  }, []);\n  useEffect(() => {\n    gsap.fromTo(smLeftCard.current, {\n      scaleX: 0,\n      scaleY: 0.7,\n      x: -300,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      opacity: 1,\n      duration: 1\n    });\n  }, [page]);\n  useEffect(() => {\n    gsap.fromTo(smRightCard.current, {\n      scaleX: 0,\n      scaleY: 0.7,\n      x: 300,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      opacity: 1,\n      duration: 1\n    });\n  }, [page]);\n  /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - Tablet ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n\n  const mdInitCard1 = useRef(null),\n        mdInitCard2 = useRef(null);\n  const mdLeftCard1 = useRef(null),\n        mdRightCard1 = useRef(null);\n  const mdLeftCard2 = useRef(null),\n        mdRightCard2 = useRef(null);\n  const [mdFirstCards, mdAction1] = useState(mdInitCard1);\n  const [mdSecondCards, mdAction2] = useState(mdInitCard2);\n  useEffect(() => {\n    gsap.fromTo(mdInitCard1.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      opacity: 0,\n      duration: 1\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      opacity: 1,\n      duration: 1\n    });\n    gsap.fromTo(mdInitCard2.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      opacity: 0,\n      duration: 1\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      opacity: 1,\n      duration: 1\n    });\n  }, []);\n  useEffect(() => {\n    gsap.fromTo(mdLeftCard1.current, {\n      scaleX: 0,\n      scaleY: 0.7,\n      x: -250,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      opacity: 1,\n      duration: 1\n    });\n    gsap.fromTo(mdLeftCard2.current, {\n      x: -250,\n      duration: 1\n    }, {\n      x: 0,\n      duration: 1\n    });\n  }, [page]);\n  useEffect(() => {\n    gsap.fromTo(mdRightCard1.current, {\n      scaleX: 0,\n      scaleY: 0.7,\n      x: 250,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      opacity: 1,\n      duration: 1\n    });\n    gsap.fromTo(mdRightCard2.current, {\n      x: 250,\n      duration: 1\n    }, {\n      x: 0,\n      duration: 1\n    });\n  }, [page]);\n  /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - PC ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n\n  const initCard1 = useRef(null),\n        initCard2 = useRef(null),\n        initCard3 = useRef(null);\n  const leftCard1 = useRef(null),\n        rightCard1 = useRef(null);\n  const leftCard2 = useRef(null),\n        rightCard2 = useRef(null);\n  const leftCard3 = useRef(null),\n        rightCard3 = useRef(null);\n  const [firstCards, action1] = useState(initCard1);\n  const [secondCards, action2] = useState(initCard2);\n  const [thirdCards, action3] = useState(initCard3);\n  useEffect(() => {\n    gsap.fromTo(initCard1.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      y: -100,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      y: 0,\n      opacity: 0.7,\n      duration: 1\n    });\n    gsap.fromTo(initCard2.current, {\n      y: -100,\n      opacity: 0,\n      duration: 2\n    }, {\n      y: 0,\n      opacity: 1,\n      duration: 1\n    });\n    gsap.fromTo(initCard3.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      y: -100,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      y: 0,\n      opacity: 0.7,\n      duration: 1\n    });\n  }, []);\n  useEffect(() => {\n    gsap.fromTo(leftCard1.current, {\n      scaleX: 0,\n      scaleY: 0.3,\n      x: -300,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      x: 0,\n      opacity: 0.7,\n      duration: 1\n    });\n    gsap.fromTo(leftCard2.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      x: -300,\n      opacity: 0.7,\n      duration: 2\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      opacity: 1,\n      duration: 1\n    });\n    gsap.fromTo(leftCard3.current, {\n      scaleX: 1,\n      scaleY: 1,\n      x: -300,\n      opacity: 1,\n      duration: 2\n    }, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      x: 0,\n      opacity: 0.7,\n      duration: 1\n    });\n  }, [page]);\n  useEffect(() => {\n    gsap.fromTo(rightCard1.current, {\n      scaleX: 0,\n      scaleY: 0.3,\n      x: 300,\n      opacity: 0,\n      duration: 2\n    }, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      x: 0,\n      opacity: 0.7,\n      duration: 1\n    });\n    gsap.fromTo(rightCard2.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      x: 300,\n      opacity: 0.7,\n      duration: 2\n    }, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 0,\n      opacity: 1,\n      duration: 1\n    });\n    gsap.fromTo(rightCard3.current, {\n      scaleX: 1,\n      scaleY: 1,\n      x: 300,\n      opacity: 1,\n      duration: 2\n    }, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      x: 0,\n      opacity: 0.7,\n      duration: 1\n    });\n  }, [page]);\n  /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Exception handling ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n\n  const exceptionBtn = useRef(null);\n\n  function smEx(param) {\n    gsap.set(param.current, {\n      scaleX: 1,\n      scaleY: 1,\n      opacity: 1\n    });\n  }\n\n  function lgEx(param) {\n    gsap.set(param.current, {\n      scaleX: 0.8,\n      scaleY: 0.8,\n      opacity: 0.7\n    });\n  }\n\n  useEffect(() => {\n    /* tablet size */\n    smEx(mdInitCard1);\n    smEx(mdRightCard2);\n    smEx(mdLeftCard1);\n    smEx(exceptionBtn);\n    /* pc size */\n\n    lgEx(initCard1);\n    lgEx(initCard3);\n    lgEx(leftCard1);\n    lgEx(leftCard3);\n    lgEx(rightCard1);\n    lgEx(rightCard3);\n  }, [window.innerWidth]);\n  /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Return ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n\n  /* 페이지 전환 - Mobile */\n\n  function smShowLeft() {\n    if (page - 1 >= 0) {\n      changePage(page - 1);\n      direction(smLeftCard);\n    }\n  }\n\n  function smShowRight() {\n    if (page + 1 < NUM) {\n      changePage(page + 1);\n      direction(smRightCard);\n    }\n  }\n  /* 이하 모바일 크기일 때 실행 */\n\n\n  if (isMobile) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        id: styles.slider,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.smbtn,\n            onClick: smShowLeft,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          id: styles.smcard,\n          ref: smCards,\n          children: /*#__PURE__*/_jsxDEV(Deck, {\n            song: randSongs.current[page]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.smbtn,\n            onClick: smShowRight,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  /* 페이지 전환 - Tablet */\n\n\n  function mdShowLeft() {\n    if (page - 1 >= 0) {\n      changePage(page - 1);\n      mdAction1(mdLeftCard1);\n      mdAction2(mdLeftCard2);\n    }\n  }\n\n  function mdShowRight() {\n    if (page + 2 == NUM) {\n      mdAction1(mdRightCard2);\n      mdAction2(mdRightCard1);\n      return;\n    }\n\n    if (page + 1 < NUM) {\n      changePage(page + 1);\n      mdAction1(mdRightCard2);\n      mdAction2(mdRightCard1);\n    }\n  }\n  /* 이하 Tablet 크기일 때 실행 */\n\n\n  if (isTablet) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        id: styles.slider,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.btn,\n            onClick: mdShowLeft,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          ref: mdFirstCards,\n          children: /*#__PURE__*/_jsxDEV(Deck, {\n            song: randSongs.current[page]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          ref: mdSecondCards,\n          children: page + 1 < NUM && /*#__PURE__*/_jsxDEV(Deck, {\n            song: randSongs.current[page + 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-2\",\n          ref: exceptionBtn,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.btn,\n            onClick: mdShowRight,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  /* 페이지 전환 - PC */\n\n\n  function showLeft() {\n    if (page - 1 >= 0) {\n      changePage(page - 1);\n      action1(leftCard1);\n      action2(leftCard2);\n      action3(leftCard3);\n    }\n  }\n\n  function showRight() {\n    if (page + 1 < NUM) {\n      changePage(page + 1);\n      action1(rightCard3);\n      action2(rightCard2);\n      action3(rightCard1);\n    }\n  }\n  /* 이하 PC 크기일 때 실행 */\n\n\n  if (!isTablet) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\",\n        id: styles.slider,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.btn,\n            onClick: showLeft,\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          ref: firstCards,\n          children: page - 1 >= 0 && /*#__PURE__*/_jsxDEV(Deck, {\n            song: randSongs.current[page - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          ref: secondCards,\n          children: /*#__PURE__*/_jsxDEV(Deck, {\n            song: randSongs.current[page]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          ref: thirdCards,\n          children: page + 1 < NUM && /*#__PURE__*/_jsxDEV(Deck, {\n            song: randSongs.current[page + 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: styles.btn,\n            onClick: showRight,\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mt-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n/* 화면에 띄울 카드 덱 */\n\n_s(Slider, \"q5JXGzxpZ0YNSeej2oZOvel/eX8=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = Slider;\n\nfunction Deck(props) {\n  let song = JSON.parse(props.song);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: styles.card,\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      className: styles.cardimg,\n      src: song.image,\n      thumbnail: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uAC00\\uC218 : \", song.singer, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AlertSong, {\n        pick_song: song\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 7\n  }, this);\n}\n\n_c2 = Deck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slider\");\n$RefreshReg$(_c2, \"Deck\");","map":{"version":3,"sources":["/Users/coodori/Desktop/Coding/moumn/src/music/Slider.js"],"names":["React","useState","useRef","useEffect","Image","Card","Button","useMediaQuery","gsap","AlertSong","styles","Slider","props","isMobile","query","isTablet","NUM","chart_info","Object","values","dataList","randCheck","cnt","rand","Math","floor","random","length","indexOf","push","JSON","stringify","randSongs","page","changePage","smInitCard","smLeftCard","smRightCard","smCards","direction","fromTo","current","y","opacity","duration","scaleX","scaleY","x","mdInitCard1","mdInitCard2","mdLeftCard1","mdRightCard1","mdLeftCard2","mdRightCard2","mdFirstCards","mdAction1","mdSecondCards","mdAction2","initCard1","initCard2","initCard3","leftCard1","rightCard1","leftCard2","rightCard2","leftCard3","rightCard3","firstCards","action1","secondCards","action2","thirdCards","action3","exceptionBtn","smEx","param","set","lgEx","window","innerWidth","smShowLeft","smShowRight","slider","smbtn","smcard","mdShowLeft","mdShowRight","btn","showLeft","showRight","Deck","song","parse","card","cardimg","image","title","singer"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { Image, Card, Button } from 'react-bootstrap';\nimport { useMediaQuery } from \"react-responsive\";\nimport { gsap } from 'gsap'\n\nimport AlertSong from \"./AlertSong\";\nimport styles from \"./Slider.module.css\"\n\nexport default function Slider(props) {\n    /* display size check */\n    const isMobile = useMediaQuery({\n        query : \"(max-width:767px)\"\n    });\n    const isTablet = useMediaQuery({\n        query : \"(min-width:768px) and (max-width:1199px)\"\n    });\n\n\n    /* pick random song */\n    const NUM = 8;\n    let chart_info = Object.values(props.chart_info);\n    let dataList = [], randCheck = [], cnt = 0;\n    while(cnt < NUM) {\n        let rand = Math.floor(Math.random() * chart_info.length);\n        if(randCheck.indexOf(rand) < 0) {\n            dataList.push(JSON.stringify(chart_info[rand]));\n            randCheck.push(rand);\n            cnt++;\n        }\n    }\n    const randSongs = useRef(dataList);         // immutable data\n    \n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - Mobile ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n    const [page, changePage] = useState(0);\n\n    const smInitCard = useRef(null);\n    const smLeftCard = useRef(null), smRightCard = useRef(null);\n\n    const [smCards, direction] = useState(smInitCard);\n\n    useEffect(() => {\n        gsap.fromTo(smInitCard.current, \n            { y:-100, opacity:0, duration:2 }, { y:0, opacity:1, duration:1 }\n        );\n    }, []);\n\n    useEffect(() => {\n        gsap.fromTo(smLeftCard.current, \n            { scaleX:0, scaleY:0.7, x:-300, opacity:0, duration:2 },\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\n        );\n    }, [page]);\n\n    useEffect(() => {\n        gsap.fromTo(smRightCard.current, \n            { scaleX:0, scaleY:0.7, x:300, opacity:0, duration:2 },\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\n        );\n    }, [page]);\n\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - Tablet ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n    const mdInitCard1 = useRef(null), mdInitCard2 = useRef(null);\n    const mdLeftCard1 = useRef(null), mdRightCard1 = useRef(null);\n    const mdLeftCard2 = useRef(null), mdRightCard2 = useRef(null);\n\n    const [mdFirstCards, mdAction1] = useState(mdInitCard1);\n    const [mdSecondCards, mdAction2] = useState(mdInitCard2);\n\n    useEffect(() => {\n        gsap.fromTo(mdInitCard1.current,\n            { scaleX:0.8, scaleY:0.8, opacity:0, duration:1 },\n            { scaleX:1, scaleY:1, opacity:1, duration:1 }\n        );\n        gsap.fromTo(mdInitCard2.current, \n            { scaleX:0.8, scaleY:0.8, opacity:0, duration:1 },\n            { scaleX:1, scaleY:1, opacity:1, duration:1 }\n        );\n    }, []);\n\n    useEffect(() => {\n        gsap.fromTo(mdLeftCard1.current, \n            { scaleX:0, scaleY:0.7, x:-250, opacity:0, duration:2 },\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\n        );\n        gsap.fromTo(mdLeftCard2.current, \n            { x:-250,  duration:1}, {x:0, duration:1 }\n        );\n    }, [page]);\n\n    useEffect(() => {\n        gsap.fromTo(mdRightCard1.current, \n            { scaleX:0, scaleY:0.7, x:250, opacity:0, duration:2 },\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\n        );\n        gsap.fromTo(mdRightCard2.current, \n            { x:250,  duration:1 }, {x:0, duration:1 }\n        );\n    }, [page]);\n\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Animation - PC ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n    const initCard1 = useRef(null), initCard2 = useRef(null), initCard3 = useRef(null);\n    const leftCard1 = useRef(null), rightCard1 = useRef(null);\n    const leftCard2 = useRef(null), rightCard2 = useRef(null);\n    const leftCard3 = useRef(null), rightCard3 = useRef(null);\n\n    const [firstCards, action1] = useState(initCard1);\n    const [secondCards, action2] = useState(initCard2);\n    const [thirdCards, action3] = useState(initCard3);\n\n    useEffect(() => {\n        gsap.fromTo(initCard1.current,\n            { scaleX:0.8, scaleY:0.8, y:-100, opacity:0, duration:2 },\n            { scaleX:0.8, scaleY:0.8, y:0, opacity:0.7, duration:1 }\n        );\n        gsap.fromTo(initCard2.current, \n            { y:-100, opacity:0, duration:2 },\n            { y:0, opacity:1, duration:1 }\n        );\n        gsap.fromTo(initCard3.current,\n            { scaleX:0.8, scaleY:0.8, y:-100, opacity:0, duration:2 },\n            { scaleX:0.8, scaleY:0.8, y:0, opacity:0.7, duration:1 }\n        );\n    }, []);\n\n    useEffect(() => {\n        gsap.fromTo(leftCard1.current, \n            { scaleX:0, scaleY:0.3, x:-300, opacity:0, duration:2 },\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\n        );\n        gsap.fromTo(leftCard2.current, \n            { scaleX:0.8, scaleY:0.8, x:-300, opacity:0.7, duration:2 },\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\n        );\n        gsap.fromTo(leftCard3.current, \n            { scaleX:1, scaleY:1, x:-300, opacity:1, duration:2 },\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\n        );\n    }, [page]);\n\n    useEffect(() => {\n        gsap.fromTo(rightCard1.current, \n            { scaleX:0, scaleY:0.3, x:300, opacity:0, duration:2 },\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\n        );\n        gsap.fromTo(rightCard2.current, \n            { scaleX:0.8, scaleY:0.8, x:300, opacity:0.7, duration:2 },\n            { scaleX:1, scaleY:1, x:0, opacity:1, duration:1 }\n        );\n        gsap.fromTo(rightCard3.current, \n            { scaleX:1, scaleY:1, x:300, opacity:1, duration:2 },\n            { scaleX:0.8, scaleY:0.8, x:0, opacity:0.7, duration:1 }\n        );\n    }, [page]);\n\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Exception handling ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n    const exceptionBtn = useRef(null);\n    function smEx(param) {\n        gsap.set(param.current, \n            { scaleX:1, scaleY:1, opacity:1 }\n        );\n    }\n    function lgEx(param) {\n        gsap.set(param.current, \n            { scaleX:0.8, scaleY:0.8, opacity:0.7 }\n        );\n    }\n\n    useEffect(() => {\n        /* tablet size */\n        smEx(mdInitCard1);\n        smEx(mdRightCard2);\n        smEx(mdLeftCard1);\n        smEx(exceptionBtn);\n        \n        /* pc size */\n        lgEx(initCard1);\n        lgEx(initCard3);\n        lgEx(leftCard1);\n        lgEx(leftCard3);\n        lgEx(rightCard1);\n        lgEx(rightCard3);\n    }, [window.innerWidth]);\n\n    /* ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ Return ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ */\n    /* 페이지 전환 - Mobile */\n    function smShowLeft() {\n        if(page-1 >= 0) {\n            changePage(page-1);\n            direction(smLeftCard);\n        }\n    }\n    function smShowRight() {\n        if(page+1 < NUM) {\n            changePage(page+1);\n            direction(smRightCard);\n        }\n    }\n\n    /* 이하 모바일 크기일 때 실행 */\n    if(isMobile) {\n        return (\n            <>\n            <div className=\"row mt-5\" />\n            <div className=\"row mt-5\" id={styles.slider}>\n                <div className=\"col-1\">\n                    <Button variant=\"dark\" className={styles.smbtn} onClick={smShowLeft}>\n                        &lt;\n                    </Button>\n                </div>\n                <div className=\"col-9\" id={styles.smcard} ref={smCards}>\n                    <Deck song={randSongs.current[page]}  />\n                </div>\n                <div className=\"col-1\">\n                    <Button variant=\"dark\" className={styles.smbtn} onClick={smShowRight}>\n                        &gt;\n                    </Button>\n                </div>\n            </div>\n            <br/>\n            <div className=\"row mt-5\" />\n            </>\n        );\n    }\n\n    /* 페이지 전환 - Tablet */\n    function mdShowLeft() {\n        if(page-1 >= 0) {\n            changePage(page-1);\n            mdAction1(mdLeftCard1);\n            mdAction2(mdLeftCard2);\n        }\n    }\n    function mdShowRight() {\n        if(page+2 == NUM) {\n            mdAction1(mdRightCard2);\n            mdAction2(mdRightCard1);\n            return;\n        }\n\n        if(page+1 < NUM) {\n            changePage(page+1);\n            mdAction1(mdRightCard2);\n            mdAction2(mdRightCard1);\n        }\n    }    \n\n    /* 이하 Tablet 크기일 때 실행 */\n    if(isTablet) {\n        return (\n            <>\n            <div className=\"row mt-5\" />\n            <div className=\"row mt-5\" id={styles.slider}>\n                <div className=\"col-md-2\">\n                    <Button variant=\"dark\" className={styles.btn} onClick={mdShowLeft}>\n                        &lt;\n                    </Button>\n                </div>\n                <div className=\"col-md-4\" ref={mdFirstCards}>\n                    <Deck song={randSongs.current[page]}/>\n                </div>\n                <div className=\"col-md-4\" ref={mdSecondCards}>\n                    {page+1 < NUM &&\n                        <Deck song={randSongs.current[page+1]}/>\n                    }\n                </div>\n                <div className=\"col-md-2\" ref={exceptionBtn}>\n                    <Button variant=\"dark\" className={styles.btn} onClick={mdShowRight}>\n                        &gt;\n                    </Button>\n                </div>\n            </div>\n            <br/>\n            <div className=\"row mt-5\" />\n            </>\n        );\n    }\n\n    /* 페이지 전환 - PC */\n    function showLeft() {\n        if(page-1 >= 0) {\n            changePage(page-1);\n            action1(leftCard1);\n            action2(leftCard2);\n            action3(leftCard3);\n        }\n    }\n    function showRight() {\n        if(page+1 < NUM) {\n            changePage(page+1);\n            action1(rightCard3);\n            action2(rightCard2);\n            action3(rightCard1);\n        }\n    }  \n\n    /* 이하 PC 크기일 때 실행 */\n    if(!isTablet) {\n        return (\n            <>\n            <div className=\"row mt-5\" />\n            <div className=\"row mt-5\" id={styles.slider}>\n                <div className=\"col-md-1\">\n                    <Button variant=\"dark\" className={styles.btn} onClick={showLeft}>\n                        &lt;\n                    </Button>\n                </div>\n                <div className=\"col-md-3\" ref={firstCards}>\n                    {page-1 >= 0 &&\n                        <Deck song={randSongs.current[page-1]}/>\n                    }\n                </div>\n                <div className=\"col-md-3\" ref={secondCards}>\n                    <Deck song={randSongs.current[page]}/>\n                </div>\n                <div className=\"col-md-3\" ref={thirdCards}>\n                    {page+1 < NUM &&\n                        <Deck song={randSongs.current[page+1]}/>\n                    }\n                </div>\n                <div className=\"col-md-1\">\n                    <Button variant=\"dark\" className={styles.btn} onClick={showRight}>\n                        &gt;\n                    </Button>\n                </div>\n            </div>\n            <br/>\n            <div className=\"row mt-5\" />\n            </>\n        );\n    }\n}\n\n/* 화면에 띄울 카드 덱 */\nfunction Deck(props) {\n    let song = JSON.parse(props.song);\n    return (\n      <Card className={styles.card}>\n        <Image className={styles.cardimg} src={song.image} thumbnail/>\n        <Card.Body>\n            <Card.Title>{song.title}</Card.Title>\n            <Card.Text>\n                <p>가수 : {song.singer} </p>\n            </Card.Text>\n            <AlertSong pick_song={song} />\n        </Card.Body>\n        <br/>\n      </Card>\n    )\n}"]},"metadata":{},"sourceType":"module"}