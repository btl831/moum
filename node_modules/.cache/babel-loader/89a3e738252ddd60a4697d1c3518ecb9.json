{"ast":null,"code":"import _regeneratorRuntime from\"/Users/coodori/Desktop/React_proj/btl831/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/coodori/Desktop/React_proj/btl831/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";// GoogleButton.js\nimport React from'react';import GoogleLogin from'react-google-login';import{jsx as _jsx}from\"react/jsx-runtime\";var clientId=\"886745805485-78tj2ngi133qkj1dk2j4bgaauda1qu60.apps.googleusercontent.com\";export default function GoogleButton(_ref){var onSocial=_ref.onSocial;var onSuccess=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(response){var googleId,_response$profileObj,email,name;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(response);googleId=response.googleId,_response$profileObj=response.profileObj,email=_response$profileObj.email,name=_response$profileObj.name;_context.next=4;return onSocial({socialId:googleId,socialType:'google',email:email,nickname:name});case 4:case\"end\":return _context.stop();}}},_callee);}));return function onSuccess(_x){return _ref2.apply(this,arguments);};}();var onFailure=function onFailure(error){console.log(error);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(GoogleLogin,{clientId:clientId,responseType:\"id_token\",onSuccess:onSuccess,onFailure:onFailure})});}","map":{"version":3,"sources":["/Users/coodori/Desktop/React_proj/btl831/src/Google_login.js"],"names":["React","GoogleLogin","clientId","GoogleButton","onSocial","onSuccess","response","console","log","googleId","profileObj","email","name","socialId","socialType","nickname","onFailure","error"],"mappings":"2TAAA;AAGA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,0EAAjB,CAEA,cAAe,SAASC,CAAAA,YAAT,MAAmC,IAAXC,CAAAA,QAAW,MAAXA,QAAW,CAC9C,GAAMC,CAAAA,SAAS,2FAAG,iBAAMC,QAAN,+JACjBC,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAEWG,QAHM,CAGqCH,QAHrC,CAGNG,QAHM,sBAGqCH,QAHrC,CAGII,UAHJ,CAGmBC,KAHnB,sBAGmBA,KAHnB,CAG0BC,IAH1B,sBAG0BA,IAH1B,uBAKRR,CAAAA,QAAQ,CAAC,CACXS,QAAQ,CAAGJ,QADA,CAEXK,UAAU,CAAG,QAFF,CAGXH,KAAK,CAALA,KAHW,CAIXI,QAAQ,CAAGH,IAJA,CAAD,CALA,uDAAH,kBAATP,CAAAA,SAAS,6CAAf,CAaA,GAAMW,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzBV,OAAO,CAACC,GAAR,CAAYS,KAAZ,EACH,CAFD,CAIA,mBACI,kCACI,KAAC,WAAD,EACI,QAAQ,CAAEf,QADd,CAEI,YAAY,CAAE,UAFlB,CAGI,SAAS,CAAEG,SAHf,CAII,SAAS,CAAEW,SAJf,EADJ,EADJ,CASH","sourcesContent":["// GoogleButton.js\n\n\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\n\nconst clientId = \"886745805485-78tj2ngi133qkj1dk2j4bgaauda1qu60.apps.googleusercontent.com\";\n\nexport default function GoogleButton({ onSocial }){\n    const onSuccess = async(response) => {\n    \tconsole.log(response);\n    \n        const { googleId, profileObj : { email, name } } = response;\n        \n        await onSocial({\n            socialId : googleId,\n            socialType : 'google',\n            email,\n            nickname : name\n        });\n    }\n\n    const onFailure = (error) => {\n        console.log(error);\n    }\n\n    return(\n        <div>\n            <GoogleLogin\n                clientId={clientId}\n                responseType={\"id_token\"}\n                onSuccess={onSuccess}\n                onFailure={onFailure}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}