{"ast":null,"code":"var _jsxFileName = \"/Users/coodori/Desktop/Coding/moumn/src/etc/Write.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { db } from '../firebase/fBase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WritePage() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [context, setConent] = useState('');\n  let history = useHistory(); // 바뀌는 것에 대한 메소드\n\n  const onChange = event => {\n    const {\n      target: {\n        id,\n        value\n      }\n    } = event;\n\n    if (id === 'title') {\n      setTitle(value);\n    } else if (id === \"content\") {\n      setConent(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    var data = {\n      title: title,\n      context: context\n    };\n    db.collection('Comment').add(data).then(() => {\n      window.location.href = '/write';\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control mt-2\",\n          id: \"title\",\n          placeholder: \"title\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control mt-2\",\n          id: \"content\",\n          onChange: onChange,\n          placeholder: \"content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"form-control mt-2\",\n          id: \"price\",\n          placeholder: \"price\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control mt-2\",\n          type: \"file\",\n          id: \"image\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-danger mt-3\",\n          id: \"send\",\n          onClick: onSubmit,\n          children: \"\\uC62C\\uB9AC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          history.goBack();\n        },\n        children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(WritePage, \"+k7Qp1lYrdlf6c5kTf6l4F4lN+E=\", false, function () {\n  return [useHistory];\n});\n\n_c = WritePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WritePage\");","map":{"version":3,"sources":["/Users/coodori/Desktop/Coding/moumn/src/etc/Write.js"],"names":["React","useState","Button","useHistory","db","WritePage","title","setTitle","context","setConent","history","onChange","event","target","id","value","onSubmit","preventDefault","data","collection","add","then","window","location","href","catch","error","console","log","goBack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,EAAR,QAAiB,mBAAjB;;;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,MAAIS,OAAO,GAAGP,UAAU,EAAxB,CAH+B,CAI/B;;AACA,QAAMQ,QAAQ,GAAIC,KAAD,IAAW;AACxB,UAAM;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,EAAD;AAAKC,QAAAA;AAAL;AAAT,QAAwBH,KAA9B;;AACA,QAAIE,EAAE,KAAK,OAAX,EAAoB;AAChBP,MAAAA,QAAQ,CAACQ,KAAD,CAAR;AACH,KAFD,MAGK,IAAID,EAAE,KAAK,SAAX,EAAsB;AACvBL,MAAAA,SAAS,CAACM,KAAD,CAAT;AACH;AACJ,GARD;;AAUA,QAAMC,QAAQ,GAAG,MAAOJ,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIC,IAAI,GAAG;AACPZ,MAAAA,KAAK,EAAGA,KADD;AAEPE,MAAAA,OAAO,EAAGA;AAFH,KAAX;AAIAJ,IAAAA,EAAE,CAACe,UAAH,CAAc,SAAd,EAAyBC,GAAzB,CAA6BF,IAA7B,EAAmCG,IAAnC,CAAwC,MAAI;AACxCC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACC,KAFL,EAEOC,KAFP,CAEcC,KAAD,IAAS;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAJD;AAKH,GAXD;;AAYA,sBACA;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAC,mBAAzB;AAA6C,UAAA,EAAE,EAAC,OAAhD;AAAwD,UAAA,WAAW,EAAC,OAApE;AAA4E,UAAA,QAAQ,EAAEf;AAAtF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAU,UAAA,KAAK,EAAC,mBAAhB;AAAoC,UAAA,EAAE,EAAC,SAAvC;AAAgD,UAAA,QAAQ,EAAEA,QAA1D;AAAmE,UAAA,WAAW,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAC,mBAAzB;AAA6C,UAAA,EAAE,EAAC,OAAhD;AAAwD,UAAA,WAAW,EAAC,OAApE;AAA2E,UAAA,QAAQ,EAAEA;AAArF;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,KAAK,EAAC,mBAAb;AAAiC,UAAA,IAAI,EAAC,MAAtC;AAA6C,UAAA,EAAE,EAAC,OAAhD;AAAuD,UAAA,QAAQ,EAAEA;AAAjE;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,KAAK,EAAC,qBAAd;AAAoC,UAAA,EAAE,EAAC,MAAvC;AAA6C,UAAA,OAAO,EAAEK,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEN,UAAAA,OAAO,CAACmB,MAAR;AAAkB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADA;AAcH;;GAzCuBxB,S;UAGNF,U;;;KAHME,S","sourcesContent":["import React,{useState} from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport {db} from '../firebase/fBase';\n\nexport default function WritePage(){\n    const [title, setTitle] = useState('');\n    const [context, setConent] = useState('');\n    let history = useHistory();\n    // 바뀌는 것에 대한 메소드\n    const onChange = (event) => {\n        const {target: {id, value}} = event;\n        if (id === 'title') {\n            setTitle(value);\n        }\n        else if (id === \"content\") {\n            setConent(value);\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        var data = { \n            title : title,\n            context : context\n        }\n        db.collection('Comment').add(data).then(()=>{\n            window.location.href = '/write'\n            }).catch((error)=>{\n            console.log(error)\n        })  \n    }\n    return(\n    <>\n        <div className=\"full\">\n            <div class=\"container mt-3\">\n                <input type=\"text\" class=\"form-control mt-2\" id=\"title\" placeholder=\"title\" onChange={onChange}/>\n                <textarea class=\"form-control mt-2\" id=\"content\"onChange={onChange}placeholder=\"content\"></textarea>\n                <input type=\"text\" class=\"form-control mt-2\" id=\"price\" placeholder=\"price\"onChange={onChange}/>\n                <input class=\"form-control mt-2\" type=\"file\" id=\"image\"onChange={onChange}/>\n                <button class=\"btn btn-danger mt-3\" id=\"send\"onClick={onSubmit}>올리기</button>\n            </div>\n            <Button onClick={() => { history.goBack() }}>돌아가기</Button>\n        </div>\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}