{"ast":null,"code":"var _jsxFileName = \"/Users/coodori/Desktop/Coding/moumn/src/firebase/Login.js\",\n    _s = $RefreshSig$();\n\n// App.js\nimport React, { useState } from 'react';\nimport { authService, firebaseInstance } from './fBase';\nimport { Button, Container, Form } from 'react-bootstrap'; // 로그인 컴포넌트 작성\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(false); // 로그인으로 먼저 들어올꺼니깐(초기 False)\n\n  const [displayName, setdisplayName] = useState(''); // 구글버튼 클릭 함수\n\n  const onGoogleClick = async event => {\n    const {\n      target: {\n        name\n      }\n    } = event;\n    let provider;\n\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n    console.log(data);\n    localStorage.setItem('user', JSON.stringify(data));\n    window.location.href = \"/\";\n  }; // 바뀌는 것에 대한 메소드\n\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    } else if (name == \"displayName\") {\n      setdisplayName(value);\n    }\n  }; // 로그인 및 생성\n\n\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let data;\n\n      if (newAccount) {\n        // create account\n        data = await authService.createUserWithEmailAndPassword(email, password).then(result => {\n          result.user.updateProfile({\n            displayName: displayName\n          });\n        }).catch(err => {\n          console.error(err);\n        });\n      } else {\n        // login\n        data = await authService.signInWithEmailAndPassword(email, password);\n        localStorage.setItem('user', JSON.stringify(data));\n        window.location.href = \"/\";\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // 바꿔주는 메소드\n\n\n  const toggleAccount = () => setNewAccount(prev => !prev);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true,\n          value: email,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password\",\n          \"aria-describedby\": \"passwordHelpBlock\",\n          required: true,\n          value: password,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          id: \"passwordHelpBlock\",\n          muted: true,\n          children: \"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), newAccount ? /*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"displayName\",\n          type: \"displayName\",\n          placeholder: \"displayName\",\n          required: true,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: newAccount ? \"Create Account\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: toggleAccount,\n        children: [\" \", newAccount ? \"Login\" : \"Create Account\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        name: \"google\",\n        onClick: onGoogleClick,\n        children: \"\\uAD6C\\uAE00 \\uACC4\\uC815\\uC73C\\uB85C \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"5YMnSw4NsNb8T4qLBgPuCeMt1ys=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/coodori/Desktop/Coding/moumn/src/firebase/Login.js"],"names":["React","useState","authService","firebaseInstance","Button","Container","Form","Login","email","setEmail","password","setPassword","newAccount","setNewAccount","displayName","setdisplayName","onGoogleClick","event","target","name","provider","auth","GoogleAuthProvider","data","signInWithPopup","console","log","localStorage","setItem","JSON","stringify","window","location","href","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","then","result","user","updateProfile","catch","err","error","signInWithEmailAndPassword","toggleAccount","prev"],"mappings":"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","sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { authService,firebaseInstance } from './fBase';\nimport { Button, Container,Form } from 'react-bootstrap'\n\n// 로그인 컴포넌트 작성\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [newAccount, setNewAccount] = useState(false);\t// 로그인으로 먼저 들어올꺼니깐(초기 False)\n    const [displayName,setdisplayName]  = useState('');\n    // 구글버튼 클릭 함수\n    const onGoogleClick = async (event) => {\n        const {target: {name}} = event;\n        let provider;\n        if (name === 'google') {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data);\n        localStorage.setItem('user',JSON.stringify(data));\n        window.location.href = \"/\";\n    }\n\n    // 바뀌는 것에 대한 메소드\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if (name==='email') {\n            setEmail(value)\n        }\n        else if (name=== \"password\") {\n            setPassword(value);\n        }\n        else if (name == \"displayName\"){\n            setdisplayName(value)\n        }\n    }\n\n    // 로그인 및 생성\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                // create account\n                data = await authService.createUserWithEmailAndPassword(email, password).then(result =>{\n                    result.user.updateProfile({\n                        displayName : displayName\n                    });\n                }).catch(err=>{\n                    console.error(err);\n                })\n            } else {\n                // login\n                data = await authService.signInWithEmailAndPassword(email, password);\n                localStorage.setItem('user',JSON.stringify(data));\n                window.location.href = \"/\";\n            }\n            \n            \n        } catch(error) {\n        console.log(error)\n        }\n    }\n\n    // 바꿔주는 메소드\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n        <Container className='full'>\n            <form onSubmit={onSubmit}>\n                <Form.Label>ID</Form.Label>\n                <Form.Control\n                    name=\"email\" \n                    type=\"email\"\n                    placeholder=\"Email\" \n                    required value={email} \n                    onChange={onChange}\n                />\n                <br/>\n\n                {/* 패스워드 */}\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    aria-describedby=\"passwordHelpBlock\"\n                    required value={password} \n                    onChange={onChange}\n                />\n                <Form.Text id=\"passwordHelpBlock\" muted>\n                    Your password must be 8-20 characters long, contain letters and numbers, and\n                    must not contain spaces, special characters, or emoji.\n                </Form.Text>\n                {\n                newAccount\n                ? <Form.Control\n                name=\"displayName\" \n                type=\"displayName\"\n                placeholder=\"displayName\" \n                required\n                onChange={onChange}\n                />\n                :\n                null\n                }\n\n                <input type=\"submit\" value={ newAccount ? \"Create Account\" : \"Login\" } />\n                <hr/>\n            </form>\n\n            {/* 버튼을 클릭하면 변경과 로그인 가입을 바꿔줌 */}\n            <Button variant=\"secondary\" onClick={toggleAccount}> {newAccount ? \"Login\" : \"Create Account\"} </Button>\n            <Button  variant=\"primary\" name=\"google\" onClick={onGoogleClick}>구글 계정으로 로그인</Button>\n        </Container>\n        </>\n    )\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}